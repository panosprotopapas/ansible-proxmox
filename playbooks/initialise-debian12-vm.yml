---
- name: Setup new VMs on Proxmox
  hosts: all
  become: true
  become_method: sudo
  gather_facts: false

  vars_files:
    - ../inventory/hosts.yml

  pre_tasks:
    - name: Prompt for sudo password
      pause:
        prompt: "Enter sudo password for {{ inventory_hostname }}"
      register: sudo_pass

    - name: Set become password
      set_fact:
        ansible_become_password: "{{ sudo_pass.user_input }}"

  tasks:
    - name: Install docker and docker-compose
      block:
        - name: Install docker and docker-compose - Download convenience script
          command: "curl -fsSL https://get.docker.com -o get-docker.sh"
        - name: Install docker and docker-compose - Execute convenience script
          command: "sh get-docker.sh"
        - name: Install docker and docker-compose - Delete convenience script
          command: "rm get-docker.sh"

    - name: Create users and configure SSH access
      block:
        - name: Create users and configure SSH access - Create user accounts
          user:
            name: "{{ item.name }}"
            state: present
            createhome: true
            shell: /bin/bash
          loop: "{{ users }}"

        - name: Create users and configure SSH access - Add public keys to authorized_keys
          authorized_key:
            user: "{{ item.name }}"
            state: present
            key: "{{ item.key }}"
          loop: "{{ users }}"

    - name: Grant sudo access to specified users and create default passwords
      block:
        - name: Grant sudo access to specified users and create default passwords - Add sudo users to sudo group
          user:
            name: "{{ item.name }}"
            groups: sudo
            append: true
          when: item.sudoer
          loop: "{{ users }}"

        - name: Grant sudo access to specified users and create default passwords - Set default password for all users
          user:
            name: "{{ item.name }}"
            password: "{{ default_new_user_password | password_hash('sha512') }}"
          loop: "{{ users }}"

    - name: Add users to docker group
      user:
        name: "{{ item.name }}"
        groups: docker
        append: true
      loop: "{{ users }}"

    - name: Ensure docker group exists
      group:
        name: docker
        state: present

    - name: Docker containers should not restart when adding further users in future and restarting the daemon
      copy:
        dest: /etc/docker/daemon.json
        content: { "live-restore": true }

    - name: Restart Docker to apply group changes
      service:
        name: docker
        state: restarted

    - name: Configure static IP - Change iface line
      replace:
        path: /etc/network/interfaces
        regexp: "^iface (\\S+) inet dhcp"
        replace: "iface \\1 inet static"

    - name: Configure static IP - Change address line
      lineinfile:
        path: /etc/network/interfaces
        regexp: "^address <ip>"
        line: "address {{ static_ip }}"

    - name: Change hostname
      hostname:
        name: "{{ new_hostname }}"

    - name: Update /etc/hosts with new hostname
      lineinfile:
        path: /etc/hosts
        regexp: "^127.0.1.1"
        line: "127.0.1.1\t{{ new_hostname }}"

    - name: Force users to change password on first login
      command: "chage -d 0 {{ item.name }}"
      loop: "{{ users }}"

    - name: Shutdown the machine
      command: "shutdown -h now"
      ignore_errors: yes

    - name: Display message to user
      debug:
        msg: "The machine has been configured. Set the amount of cores and memory you need, start it, and SSH into {{ static_ip }}"
